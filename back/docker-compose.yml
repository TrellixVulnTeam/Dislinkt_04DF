version: "3.8"

services:
  user_service:
    image: user_service
    container_name: user_service
    build:
      context: .
      dockerfile: ./user_service/Dockerfile
    restart: on-failure
    environment:
      USER_DB_HOST: ${USER_DB_HOST}
      USER_DB_PORT: ${USER_DB_PORT}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
    depends_on:
      - user_db
    networks:
      - network
      
  post_service:
    image: post_service
    container_name: post_service
    build:
      context: .
      dockerfile: ./post_service/Dockerfile
    restart: on-failure
    environment:
      POST_DB_HOST: ${POST_DB_HOST}
      POST_DB_PORT: ${POST_DB_PORT}
      POST_SERVICE_PORT: ${POST_SERVICE_PORT}
    depends_on:
      - post_db
    networks:
      - network

  authentification_service:
    image: authentification_service
    container_name: authentification_service
    build:
      context: .
      dockerfile: ./authentification_service/Dockerfile
    restart: on-failure
    environment:
      AUTHENTIFICATION_DB_HOST: ${AUTHENTIFICATION_DB_HOST}
      AUTHENTIFICATION_DB_PORT: ${AUTHENTIFICATION_DB_PORT}
      AUTHENTIFICATION_SERVICE_PORT: ${AUTHENTIFICATION_SERVICE_PORT}
    depends_on:
      - authentification_db
    networks:
      - network

  api_gateway:
    image: api_gateway
    container_name: api_gateway
    build:
      context: .
      dockerfile: ./api_gateway/Dockerfile
    restart: on-failure
    ports:
      - ${GATEWAY_PORT}:${GATEWAY_PORT}
    environment:
      GATEWAY_PORT: ${GATEWAY_PORT}
      USER_SERVICE_HOST: ${USER_SERVICE_HOST}
      USER_SERVICE_PORT: ${USER_SERVICE_PORT}
      AUTHENTIFICATION_SERVICE_HOST: ${AUTHENTIFICATION_SERVICE_HOST}
      AUTHENTIFICATION_SERVICE_PORT: ${AUTHENTIFICATION_SERVICE_PORT}
      POST_SERVICE_HOST: ${POST_SERVICE_HOST}
      POST_SERVICE_PORT: ${POST_SERVICE_PORT}
    networks:
      - network

  user_db:
    image: mongo
    container_name: user_db
    restart: on-failure
    networks:
      - network

  post_db:
    image: mongo
    container_name: post_db
    restart: on-failure
    networks:
      - network

  authentification_db:
    image: mongo
    container_name: authentification_db
    restart: on-failure
    networks:
      - network

networks:
  network:
    driver: bridge