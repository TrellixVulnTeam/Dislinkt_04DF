syntax = "proto3";

option go_package = "github.com/XWS-2022-Tim12/Dislinkt/back/common/user";

package user;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service UserService{
        rpc Get(GetRequest) returns(GetResponse) {
        	option (google.api.http) = {
			get: "/user/{id}"
		};
        }
        rpc GetByUsername(GetByUsernameRequest) returns(GetByUsernameResponse) {
                option (google.api.http) = {
			get: "/user/userByUsername/{username}"
		};
        }
        rpc GetPublicUserByUsername(GetPublicUserByUsernameRequest) returns(GetPublicUserByUsernameResponse) {
                option (google.api.http) = {
			get: "/user/publicUserByUsername/{username}"
		};
        }
        rpc GetAll(GetAllRequest) returns(GetAllResponse) {
        	option (google.api.http) = {
			get: "/user/users"
		};
        }
        rpc GetAllPublicUsers(GetAllPublicUsersRequest) returns(GetAllPublicUsersResponse) {
        	option (google.api.http) = {
			get: "/user/publicUsers"
		};
        }
        rpc GetAllPublicUsersByUsername(GetAllPublicUsersByUsernameRequest) returns(GetAllPublicUsersByUsernameResponse) {
        	option (google.api.http) = {
			get: "/user/publicUsersByUsername/{username}"
		};
        }
        rpc Register(RegisterRequest) returns(RegisterResponse) {
                option (google.api.http) = {
                        post: "/user"
                        body: "user"
                };
        }
         rpc UpdateBasicInfo(UpdateBasicInfoRequest) returns(UpdateBasicInfoResponse) {
                option (google.api.http) = {
                        put: "/user/basic"
                        body: "user"
                };
        }
         rpc UpdateAdvancedInfo(UpdateAdvancedInfoRequest) returns(UpdateAdvancedInfoResponse) {
                option (google.api.http) = {
                        put: "/user/advanced"
                        body: "user"
                };
        }
         rpc UpdatePersonalInfo(UpdatePersonalInfoRequest) returns(UpdatePersonalInfoResponse) {
                option (google.api.http) = {
                        put: "/user/personal"
                        body: "user"
                };
        }
         rpc UpdateAllInfo(UpdateAllInfoRequest) returns(UpdateAllInfoResponse) {
                option (google.api.http) = {
                        put: "/user/allInfo"
                        body: "user"
                };
        }
        rpc FollowPublicProfile(FollowPublicProfileRequest) returns(FollowPublicProfileResponse) {
                option (google.api.http) = {
                        post: "/user/follow"
                        body: "user"
                };
        }
        rpc AcceptFollowingRequest(AcceptFollowingRequestRequest) returns(AcceptFollowingRequestResponse) {
                option (google.api.http) = {
                        post: "/user/acceptFollowingRequest"
                        body: "user"
                };
        }
        rpc RejectFollowingRequest(RejectFollowingRequestRequest) returns(RejectFollowingRequestResponse) {
                option (google.api.http) = {
                        post: "/user/rejectFollowingRequest"
                        body: "user"
                };
        }
}

message GetRequest {
        string id = 1;
}

message GetResponse {
        User user = 1;
}

message GetByUsernameRequest {
        string username = 1;
}

message GetByUsernameResponse {
        User user = 1;
}

message GetPublicUserByUsernameRequest {
        string username = 1;
}

message GetPublicUserByUsernameResponse {
        User user = 1;
}

message GetAllRequest {
}

message GetAllResponse {
        repeated User users = 1;
}

message GetAllPublicUsersRequest {
}

message GetAllPublicUsersResponse {
        repeated User users = 1;
}

message GetAllPublicUsersByUsernameRequest {
        string username = 1;
}

message GetAllPublicUsersByUsernameResponse {
        repeated User users = 1;
}

message RegisterRequest {
        User user = 1;
}

message RegisterResponse {
        string success = 1;
}

message UpdateBasicInfoRequest {
        User user = 1;
}

message UpdateBasicInfoResponse {
        string success = 1;
}

message UpdateAdvancedInfoRequest {
        User user = 1;
}

message UpdateAdvancedInfoResponse {
        string success = 1;
}

message UpdatePersonalInfoRequest {
        User user = 1;
}

message UpdatePersonalInfoResponse {
        string success = 1;
}

message UpdateAllInfoRequest {
        User user = 1;
}

message UpdateAllInfoResponse {
        string success = 1;
}

message FollowPublicProfileRequest {
        User user = 1;
}

message FollowPublicProfileResponse {
        string success = 1;
}

message AcceptFollowingRequestRequest {
        User user = 1;
}

message AcceptFollowingRequestResponse {
        string success = 1;
}

message RejectFollowingRequestRequest {
        User user = 1;
}

message RejectFollowingRequestResponse {
        string success = 1;
}

message User {
        string id = 1;
        string firstname = 2;
        string email = 3;
        string mobileNumber = 4;
        enum GenderEnum {
                Male = 0;
                Female = 1;
        }
        GenderEnum gender = 5;
        google.protobuf.Timestamp birthDay = 6;
        string username = 7;
        string biography = 8;
        string experience = 9;
        enum EducationEnum {
                PrimaryEducation = 0;
                LowerSecondaryEducation = 1;
                UpperSecondaryEducation = 2;
                Bachelor = 3;
                Master = 4;
                Doctorate = 5;
        }
        EducationEnum education = 10;
        string skills = 11;
        string interests = 12;
        string password = 13;
        repeated string followingUsers = 14;
        repeated string followedByUsers = 15;
        repeated string followingRequests = 16;
        bool public = 17;
}
